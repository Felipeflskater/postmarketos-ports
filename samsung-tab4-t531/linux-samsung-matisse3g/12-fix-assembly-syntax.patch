--- a/arch/arm/mm/proc-v7.S
+++ b/arch/arm/mm/proc-v7.S
@@ -343,7 +343,7 @@ __v7_ca15mp_proc_info:
 	.long	PMD_TYPE_SECT | \
 		PMD_SECT_AP_WRITE | \
 		PMD_SECT_AP_READ | \
-		PMD_SECT_AF #| \
+		PMD_SECT_AF | \
 		PMD_FLAGS_SMP
 	.long   PMD_TYPE_SECT | \
 		PMD_SECT_XN | \
@@ -354,6 +354,7 @@ __v7_ca15mp_proc_info:
 	.long	cpu_elf_name
 	PROC_INFO_LIST_END
 
+
 --- a/arch/arm/kernel/entry-armv.S
 +++ b/arch/arm/kernel/entry-armv.S
 @@ -1234,6 +1234,9 @@ vector_addrexcptn:
@@ -365,6 +366,25 @@ vector_fiq:
 	disable_fiq
 	subs	pc, lr, #4
 #endif
+
+--- a/arch/arm/mach-msm/include/mach/irqs.h
++++ b/arch/arm/mach-msm/include/mach/irqs.h
+@@ -140,6 +140,3 @@
+ #define MSM_GPIO_TO_INT(n)          (MSM_GPIO_INT_BASE + (n))
+ #define MSM_INT_TO_REG(base, irq)   (base + ((irq & 31) << 2))
+ 
+-#endif
+-
+-#endif
+
+--- a/include/linux/compiler-gcc.h
++++ b/include/linux/compiler-gcc.h
+@@ -100,6 +100,10 @@
+ #define __always_unused			__attribute__((unused))
+ #define __maybe_unused			__attribute__((unused))
+ 
++/* Prevent .err directive issues with modern GCC */
++#ifndef __ASSEMBLY__
+ #define __used				__attribute__((__used__))
++#endif
+ #define __compiler_offsetof(a, b)	\
+ 	__builtin_offsetof(a, b)