--- a/include/linux/compiler-attributes.h
+++ b/include/linux/compiler-attributes.h
@@ -10,6 +10,7 @@
 # define __maybe_unused __attribute__((unused))
 # define __must_check __attribute__((warn_unused_result))
 # define __used __attribute__((__used__))
+# define __always_inline inline __attribute__((always_inline))
 # define __compiler_offsetof(a,b) __builtin_offsetof(a,b)
 #else
 # define __printf(a, b)
@@ -18,6 +19,7 @@
 # define __maybe_unused
 # define __must_check
 # define __used
+# define __always_inline inline
 # define __compiler_offsetof(a,b) ((size_t) &((a *)0)->b)
 #endif
 
--- a/include/linux/err.h
+++ b/include/linux/err.h
@@ -1,6 +1,11 @@
 #ifndef _LINUX_ERR_H
 #define _LINUX_ERR_H
 
+/* Ensure compiler attributes are available */
+#ifndef __must_check
+#define __must_check __attribute__((warn_unused_result))
+#endif
+
 #include <linux/compiler.h>
 
 #include <asm/errno.h>
@@ -19,7 +24,7 @@
 #define IS_ERR_VALUE(x) unlikely((x) >= (unsigned long)-MAX_ERRNO)
 
-static inline void * __must_check ERR_PTR(long error)
+static inline void * ERR_PTR(long error)
 {
        return (void *) error;
 }
@@ -24,7 +29,7 @@ static inline void * __must_check ERR_PTR(long error)
        return (void *) error;
 }
 
-static inline long __must_check PTR_ERR(const void *ptr)
+static inline long PTR_ERR(const void *ptr)
 {
        return (long) ptr;
 }
@@ -29,7 +34,7 @@ static inline long __must_check PTR_ERR(const void *ptr)
        return (long) ptr;
 }
 
-static inline long __must_check IS_ERR(const void *ptr)
+static inline long IS_ERR(const void *ptr)
 {
        return IS_ERR_VALUE((unsigned long)ptr);
 }
--- a/include/linux/kobject.h
+++ b/include/linux/kobject.h
@@ -83,7 +83,7 @@ extern int kobject_set_name_vargs(struct kobject *kobj, const char *fmt,
 extern int kobject_init_and_add(struct kobject *kobj,
                                 struct kobj_type *ktype, struct kobject *parent,
                                 const char *fmt, ...);
-extern __printf(3, 4) __must_check
+extern __printf(3, 4)
 int kobject_add(struct kobject *kobj, struct kobject *parent,
                const char *fmt, ...);
-extern __printf(4, 5) __must_check
+extern __printf(4, 5)
 int kobject_init_and_add(struct kobject *kobj,
                         struct kobj_type *ktype, struct kobject *parent,
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -15,6 +15,11 @@
 #include <linux/pm_wakeup.h>
 #include <asm/device.h>
 
+/* Ensure __must_check is available */
+#ifndef __must_check
+#define __must_check __attribute__((warn_unused_result))
+#endif
+
 struct device;
 struct device_private;
 struct device_driver;
@@ -48,7 +53,7 @@ struct bus_attribute {
        .store  = _store,       \
 }
 
-extern int __must_check bus_create_file(struct bus_type *,
+extern int bus_create_file(struct bus_type *,
                                        struct bus_attribute *);
 extern void bus_remove_file(struct bus_type *, struct bus_attribute *);