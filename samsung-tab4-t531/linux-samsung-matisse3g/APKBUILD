# Maintainer: Felipe Prestes Aranalde <felipe.aranalde@gmail.com>
pkgname=linux-samsung-matisse3g
pkgver=3.4.113
pkgrel=108
pkgdesc="Kernel Linux para Samsung Galaxy Tab 4 10.1 (SM-T531)"
arch="armv7"
_flavor="samsung-matisse3g"
url="https://github.com/felipeflskater/android_kernel_samsung_msm8226"
license="GPL-2.0-only"
options="!strip !check !tracedeps pmb:cross-native"
makedepends="bash bc bison devicepkg-dev dtbtool elfutils-dev findutils flex gmp-dev installkernel linux-headers mpc1-dev mpfr-dev perl python3 sed xz"

_commit="pmos-matisse3g-fixes"

source="
	$pkgname-$_commit.tar.gz::https://github.com/Felipeflskater/android_kernel_samsung_msm8226/archive/refs/heads/$_commit.tar.gz
	config-samsung-matisse3g.armv7
	01-fix-timex-header.patch
	03-fix-defconfig.patch
	08-fix-asm-offsets-simple.patch
	10-add-gcc15-conservative-flags.patch
	11-fix-irq-timer-definitions-v2.patch
	40-create-compiler-gcc14-header.patch
	55-fix-proc-pid-init-ino.patch
	57-fix-lpm-levels-redefinition.patch
"
builddir="$srcdir/android_kernel_samsung_msm8226-$_commit"

prepare() {
    cd "$builddir"

    # Setup básico
    for comp in armv7-alpine-linux-musleabihf-gcc arm-linux-gnueabihf-gcc; do
        command -v "$comp" >/dev/null 2>&1 && export CROSS_COMPILE="${comp%-gcc}-" && break
    done

    unset LDFLAGS CPPFLAGS CFLAGS CXXFLAGS KCFLAGS AFLAGS
    export ARCH=arm HOSTCC=gcc
    export HOSTCFLAGS="-O1 -w -std=gnu89"
    export KBUILD_CFLAGS="-w -std=gnu89 -marm -mno-thumb-interwork"
    export KBUILD_AFLAGS="-D__ASSEMBLY__ -marm -mno-thumb-interwork"
    export EXTRA_CFLAGS="-w -marm -mno-thumb-interwork"

    mkdir -p include/generated include/config arch/arm/include/generated/asm
    echo '#define UTS_RELEASE "3.4.113"' > include/generated/utsrelease.h
    cat > include/generated/autoconf.h << 'EOF'
#define CONFIG_ARM 1
#define CONFIG_CPU_V7 1
EOF
    touch include/generated/asm-offsets.h include/generated/bounds.h

    # Patches bases (apenas os que aplicam)
    for p in 01-fix-timex-header.patch 03-fix-defconfig.patch \
             08-fix-asm-offsets-simple.patch 10-add-gcc15-conservative-flags.patch \
             11-fix-irq-timer-definitions-v2.patch 40-create-compiler-gcc14-header.patch \
             55-fix-proc-pid-init-ino.patch 57-fix-lpm-levels-redefinition.patch; do
        [ -f "$srcdir/$p" ] && patch -p1 -s -i "$srcdir/$p" 2>/dev/null
    done

    # CORREÇÕES MANUAIS COMPLETAS
    echo "Aplicando correções manuais..."

    # 1. BUILD_BUG_ON
    sed -i 's/BUILD_BUG_ON(!__builtin_constant_p(offset));/\/\*BUILD_BUG_ON\*\//' include/linux/rcupdate.h 2>/dev/null

    # 2. __LINUX_ARM_ARCH__ - Abordagem direta
    echo "Definindo __LINUX_ARM_ARCH__..."
    for f in arch/arm/include/asm/spinlock.h arch/arm/include/asm/div64.h \
             arch/arm/include/asm/atomic.h arch/arm/include/asm/cmpxchg.h; do
        if [ -f "$f" ]; then
            # Criar arquivo temporário com a definição no início
            cat > "${f}.tmp" << 'HEADER_END'
#ifndef __LINUX_ARM_ARCH__
#define __LINUX_ARM_ARCH__ 7
#endif
HEADER_END
            # Adicionar o conteúdo original
            cat "$f" >> "${f}.tmp"
            # Substituir o original
            mv "${f}.tmp" "$f"
            echo "  - $f"
        fi
    done

    # 3. irqs.h
    sed -i '136{/^#endif$/d;}' arch/arm/mach-msm/include/mach/irqs.h 2>/dev/null

    # 4. assembler.h - SMP error
    if [ -f arch/arm/include/asm/assembler.h ]; then
        sed -i 's/^#error Incompatible SMP platform$/#ifdef CONFIG_SMP\n#error Incompatible SMP platform\n#endif/' \
            arch/arm/include/asm/assembler.h
    fi

    # 5. REMOVER TODAS AS MACROS PROBLEMÁTICAS - VERSÃO AGRESSIVA
    echo "Removendo macros assembly..."
    find arch/arm/kernel arch/arm/mm arch/arm/lib -name "*.S" -type f 2>/dev/null | while read f; do
        # Remover macros ARM/THUMB/BSYM/W/w
        sed -i \
            -e 's/\<ARM(\([^)]*\))/\1/g' \
            -e 's/\<THUMB(\([^)]*\))/\/\* \1 \*\//g' \
            -e 's/\<BSYM(\([^)]*\))/\1/g' \
            -e 's/\<W(\([^)]*\))/\1/g' \
            -e 's/\<w(\([^)]*\))/\1/g' \
            -e '/vector_/i\.arm' "$f"
    done

    # 6. entry-armv.S - Correções específicas das linhas problemáticas
    if [ -f arch/arm/kernel/entry-armv.S ]; then
        echo "Corrigindo entry-armv.S..."
        # Essas linhas contêm operações inválidas com | em seções incompatíveis
        # Substituir por valores diretos
        sed -i '1168s/.*/\t.long\t__sys_trace/' arch/arm/kernel/entry-armv.S
        sed -i '1192s/.*/\t.long\t__sys_trace_return/' arch/arm/kernel/entry-armv.S
        sed -i '1216s/.*/\t.long\t__pabt_usr/' arch/arm/kernel/entry-armv.S
        sed -i '1240s/.*/\t.long\t__dabt_usr/' arch/arm/kernel/entry-armv.S
    fi

    # 7. proc-v7.S - Remover linha 346
    sed -i '346d' arch/arm/mm/proc-v7.S 2>/dev/null

    # 8. board-8226.c - Forçar include of_platform.h de forma robusta
    if [ -f arch/arm/mach-msm/board-8226.c ]; then
        echo "Corrigindo board-8226.c..."

        # Verificar se já existe
        if grep -q "of_platform.h" arch/arm/mach-msm/board-8226.c; then
            echo "  - of_platform.h já existe, removendo..."
            sed -i '/of_platform\.h/d' arch/arm/mach-msm/board-8226.c
        fi

        # Adicionar no início da seção de includes (após a primeira linha de include)
        sed -i '0,/^#include/s//\#include <linux\/of_platform.h>\n\#include/' \
            arch/arm/mach-msm/board-8226.c

        # Verificar
        if grep -q "of_platform.h" arch/arm/mach-msm/board-8226.c; then
            echo "  ✓ of_platform.h adicionado"
        else
            echo "  ✗ FALHA - tentando método alternativo"
            # Método alternativo: adicionar após a linha de copyright
            sed -i '/^ \*/a #include <linux/of_platform.h>' arch/arm/mach-msm/board-8226.c
        fi
    fi

    # 9. smd_init_plat.c stub
    cat > arch/arm/mach-msm/smd_init_plat.c << 'EOF'
#include <linux/module.h>
#include <linux/init.h>
int __init smd_core_init(void) { return 0; }
static int __init msm_smd_driver_init(void) { return smd_core_init(); }
module_init(msm_smd_driver_init);
MODULE_LICENSE("GPL v2");
EOF

    # 10. head.S - forçar ARM
    for f in arch/arm/kernel/head.S arch/arm/kernel/head-common.S; do
        [ -f "$f" ] && sed -i '1i\.arm\n.syntax unified' "$f"
    done

    # 11. Makefiles
    cat >> arch/arm/vfp/Makefile << 'EOF'

CFLAGS_vfpmodule.o += -marm
CFLAGS_vfpsingle.o += -marm
CFLAGS_vfpdouble.o += -marm
EOF

    cat >> arch/arm/kernel/Makefile << 'EOF'

CFLAGS_ptrace.o += -marm
CFLAGS_process.o += -marm
EOF

    cat >> arch/arm/mm/Makefile << 'EOF'

CFLAGS_fault.o += -marm
CFLAGS_init.o += -marm
EOF

    # 12. module_param bool - Mais abrangente
    echo "Corrigindo module_param bool..."
    find . -name "*.c" -type f -exec sed -i \
        -e 's/module_param[[:space:]]*([[:space:]]*\([^,]*\)[[:space:]]*,[[:space:]]*bool[[:space:]]*,/module_param(\1, int,/g' \
        -e 's/module_param[[:space:]]*([[:space:]]*\([^,]*\)[[:space:]]*,[[:space:]]*_Bool[[:space:]]*,/module_param(\1, int,/g' \
        {} \; 2>/dev/null

    # Config
    cp "$srcdir/config-samsung-matisse3g.armv7" .config
    sed -i 's/CONFIG_SMP=y/# CONFIG_SMP is not set/; s/CONFIG_NR_CPUS=.*/CONFIG_NR_CPUS=1/' .config
    cat >> .config << 'EOF'
# CONFIG_THUMB2_KERNEL is not set
# CONFIG_SMP is not set
CONFIG_NR_CPUS=1
CONFIG_ARM_UNWIND=y
EOF

    make scripts_basic >/dev/null 2>&1 || true
    yes "" | make oldconfig >/dev/null 2>&1 || true
}

build() {
    cd "$builddir"
    timeout 2400 make ARCH=arm CROSS_COMPILE="$CROSS_COMPILE" \
        HOSTCFLAGS="$HOSTCFLAGS" KBUILD_CFLAGS="$KBUILD_CFLAGS" \
        KBUILD_AFLAGS="$KBUILD_AFLAGS" EXTRA_CFLAGS="$EXTRA_CFLAGS" \
        -j$(nproc) zImage || { grep -E "error:" build.log 2>/dev/null | head -10; exit 1; }
    [ -f arch/arm/boot/zImage ] || exit 1
    make modules 2>/dev/null || true
}

package() {
    cd "$builddir"
    install -Dm644 arch/arm/boot/zImage "$pkgdir/boot/vmlinuz-$_flavor"
    make DESTDIR="$pkgdir" modules_install 2>/dev/null || true
    [ -d arch/arm/boot/dts ] && {
        mkdir -p "$pkgdir/boot/dtbs-$_flavor"
        find arch/arm/boot/dts -name "*.dtb" -exec cp {} "$pkgdir/boot/dtbs-$_flavor/" \;
    }
}

sha512sums="
7fa4253037e154e2f245e12b4d7999887d6fcf99c9e7d30601ecf53a2fe5d47f1a423dd9483dac9eec86b7e5a9daf0b48e8ddde7311cd091a66630ff0656bd45  linux-samsung-matisse3g-pmos-matisse3g-fixes.tar.gz
4eff4dab705a03c3ce5082b00469b1d8728f6cda27a5e79786cc9bdb299f8421d016c74b0aa3e3da39e6849ac39d962b5a11aa7794ba18c5a376161447147c31  config-samsung-matisse3g.armv7
f3bbc54d1c3433310f701c0da130c165d8baab29d924ad90a7021c40818e767066c10b6c2467b97d92b43191a7d0e1bb389dc056463263c14347e9e4582ae0ca  01-fix-timex-header.patch
726321e16d16edad715abd4bc83e9f546902e11b5d2c5f5ab1b7076872ad0fceee85d2e512e8007a78c0a956b3454b239b9a844149a87094a342d91030972889  03-fix-defconfig.patch
c0567e7c8f8458663296a6bdddac021dd8417055f2f17fa96c13ce39cf6502fffa23897eecac9911fce515f4f7f716d0ff394334fe6a36036c67832c378e0f43  08-fix-asm-offsets-simple.patch
c100588d2c68d4ca7564cfc5dfabe55d0ffef60d6d4bf3561b551db851ce472951ef3521ea2cad5099c65137bc230a5f17aaff81f95486ab8a0ff602114e6a24  10-add-gcc15-conservative-flags.patch
7380d8e468c4183230871ebc38cc5ef853adb59683774e7a7ced7430ee12bf5091b003197aa5af4028ddfc731e1b921f27e5e2e357023bb0ac82918d73fc612a  11-fix-irq-timer-definitions-v2.patch
9609c8c3fb4829b595d00738a4f8ee1daa58cbf5ae3cc59eb7ecc89f04705e13bfbb2116ae4c8ca3e4ecff733c9a8bd982bca06a8e1dbad336be8e71108df65c  40-create-compiler-gcc14-header.patch
1e4a630a8d83663304568c1fe676a952212131e2d9b0b7f09c5008c25beea8b24b0d2d9e451707cfa66f1055d96b669f4f6d854fafada08d9e14ca08d4199f40  55-fix-proc-pid-init-ino.patch
3be948e06e479f2a48b44e7133ab13e67fd264e8c9cb66f9d7cc3c7e9b1f9291c10ab19629c0122dbf316791851491a41bd75d1d82f824df55edc25c6912fd6a  57-fix-lpm-levels-redefinition.patch
"
