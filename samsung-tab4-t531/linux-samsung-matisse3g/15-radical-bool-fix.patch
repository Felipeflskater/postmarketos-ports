--- a/include/linux/stddef.h
+++ b/include/linux/stddef.h
@@ -10,14 +10,25 @@
 
 #undef NULL
 #define NULL ((void *)0)
+
+/* Prevent command-line bool redefinitions */
+#ifdef false
+#undef false
+#endif
+#ifdef true
+#undef true
+#endif
 
 enum {
 	false	= 0,
 	true	= 1
 };
 
-#define false __kernel_false
-#define true  __kernel_true
+/* Only define these if not already defined by command line */
+#ifndef false
+#define false 0
+#endif
+#ifndef true
+#define true 1
+#endif
 
 #undef offsetof
--- a/include/linux/types.h
+++ b/include/linux/types.h
@@ -23,7 +23,15 @@ typedef __kernel_gid32_t	gid_t;
 typedef __kernel_uid16_t        uid16_t;
 typedef __kernel_gid16_t        gid16_t;
 
+/* Prevent command-line _Bool redefinitions */
+#ifdef _Bool
+#undef _Bool
+#endif
+
+#ifndef __cplusplus
 typedef _Bool			bool;
+#endif
+
 
 typedef __kernel_loff_t		loff_t;
 
--- a/scripts/Kbuild.include
+++ b/scripts/Kbuild.include
@@ -128,6 +128,10 @@ cc-ifversion = $(shell [ $(call cc-version, $(CC)) $(1) $(2) ] && echo $(3))
 # cc-ldoption
 # Usage: ldflags += $(call cc-ldoption, -Wl$(comma)--hash-style=both)
 cc-ldoption = $(call try-run,\
 	$(CC) $(1) $(KBUILD_CPPFLAGS) $(CC_OPTION_CFLAGS) -nostdlib -x c /dev/null -o "$$TMP",$(1),$(2))
 
+# Remove any command-line bool definitions
+KBUILD_CPPFLAGS := $(filter-out -Dtrue=% -Dfalse=% -D_Bool=%,$(KBUILD_CPPFLAGS))
+KBUILD_CFLAGS := $(filter-out -Dtrue=% -Dfalse=% -D_Bool=%,$(KBUILD_CFLAGS))
+
 # Shorthand for $(Q)$(MAKE) -f scripts/Makefile.build obj=
--- a/Makefile
+++ b/Makefile
@@ -361,6 +361,9 @@ LDFLAGS_MODULE  =
 CFLAGS_KERNEL	=
 AFLAGS_KERNEL	=
 
+# Prevent command-line bool pollution
+KBUILD_CPPFLAGS := $(filter-out -Dtrue% -Dfalse% -D_Bool%,$(KBUILD_CPPFLAGS))
+
 # Use USERINCLUDE when you must reference the UAPI directories only.
 USERINCLUDE    := \
 		-I$(srctree)/arch/$(hdr-arch)/include/uapi \