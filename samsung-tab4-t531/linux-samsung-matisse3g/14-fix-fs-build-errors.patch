--- a/fs/ext4/super.c
+++ b/fs/ext4/super.c
@@ -426,13 +426,13 @@ static void __save_error_info(struct super_block *sb, const char *func,
 		return;
 
 	es->s_state |= cpu_to_le16(EXT4_ERROR_FS);
-	strncpy(es->s_last_error_func, func, sizeof(es->s_last_error_func));
+	strncpy(es->s_last_error_func, func, sizeof(es->s_last_error_func) - 1);
+	es->s_last_error_func[sizeof(es->s_last_error_func) - 1] = '\0';
 	es->s_last_error_line = cpu_to_le32(line);
 	if (!es->s_first_error_time) {
 		es->s_first_error_time = es->s_last_error_time;
 		es->s_first_error_ino = es->s_last_error_ino;
-		strncpy(es->s_first_error_func, func,
-			sizeof(es->s_first_error_func));
+		strncpy(es->s_first_error_func, func, sizeof(es->s_first_error_func) - 1);
+		es->s_first_error_func[sizeof(es->s_first_error_func) - 1] = '\0';
 		es->s_first_error_line = cpu_to_le32(line);
 		es->s_first_error_block = es->s_last_error_block;
 	}
--- a/include/linux/compiler-gcc.h
+++ b/include/linux/compiler-gcc.h
@@ -5,6 +5,8 @@
  * Common definitions for all gcc versions go here.
  */
 
+#ifndef __ASSEMBLY__
+
 /* Optimization barrier */
 /* The "volatile" is due to gcc bugs */
 #define barrier() __asm__ __volatile__("": : :"memory")
@@ -98,3 +100,5 @@
 #if GCC_VERSION >= 40600
 #define __visible	__attribute__((externally_visible))
 #endif
+
+#endif /* __ASSEMBLY__ */