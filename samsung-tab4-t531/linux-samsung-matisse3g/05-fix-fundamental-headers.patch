diff --git a/include/linux/types.h b/include/linux/types.h
index 1234567..abcdefg 100644
--- a/include/linux/types.h
+++ b/include/linux/types.h
@@ -1,4 +1,8 @@
 #ifndef _LINUX_TYPES_H
+#ifndef __KERNEL__
+#define __KERNEL__
+#endif
 #define _LINUX_TYPES_H
 
 #include <uapi/linux/types.h>
@@ -10,7 +14,6 @@
 #define DECLARE_BITMAP(name,bits) \
 	unsigned long name[BITS_TO_LONGS(bits)]
 
-#warning "kernel headers from user space, include from user space may cause conflicts"
 typedef __u16 __bitwise __le16;
 typedef __u16 __bitwise __be16;
 typedef __u32 __bitwise __le32;
diff --git a/include/linux/bits_per_long_fix.h b/include/linux/bits_per_long_fix.h
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/include/linux/bits_per_long_fix.h
@@ -0,0 +1,22 @@
+#ifndef _LINUX_BITS_PER_LONG_FIX_H
+#define _LINUX_BITS_PER_LONG_FIX_H
+
+/* PostmarketOS: Force BITS_PER_LONG definition for ARM */
+#ifndef BITS_PER_LONG
+#ifdef CONFIG_64BIT
+#define BITS_PER_LONG 64
+#else
+#define BITS_PER_LONG 32
+#endif
+#endif
+
+#ifndef __BITS_PER_LONG
+#define __BITS_PER_LONG BITS_PER_LONG
+#endif
+
+/* Also define BITS_PER_LONG_LONG */
+#ifndef BITS_PER_LONG_LONG
+#define BITS_PER_LONG_LONG 64
+#endif
+
+#endif /* _LINUX_BITS_PER_LONG_FIX_H */
diff --git a/include/asm-generic/bitops/fls64.h b/include/asm-generic/bitops/fls64.h
index 1234567..abcdefg 100644
--- a/include/asm-generic/bitops/fls64.h
+++ b/include/asm-generic/bitops/fls64.h
@@ -1,3 +1,4 @@
+#include <linux/bits_per_long_fix.h>
 #ifndef _ASM_GENERIC_BITOPS_FLS64_H_
 #define _ASM_GENERIC_BITOPS_FLS64_H_
 
diff --git a/include/asm-generic/bitops/sched.h b/include/asm-generic/bitops/sched.h
index 1234567..abcdefg 100644
--- a/include/asm-generic/bitops/sched.h
+++ b/include/asm-generic/bitops/sched.h
@@ -1,3 +1,4 @@
+#include <linux/bits_per_long_fix.h>
 #ifndef _ASM_GENERIC_BITOPS_SCHED_H_
 #define _ASM_GENERIC_BITOPS_SCHED_H_
 
diff --git a/arch/arm/include/asm/swab.h b/arch/arm/include/asm/swab.h
index 1234567..abcdefg 100644
--- a/arch/arm/include/asm/swab.h
+++ b/arch/arm/include/asm/swab.h
@@ -15,7 +15,7 @@
 #define __SWAB_64_THRU_32__
 
 #include <linux/types.h>
-#include <linux/byteorder.h>
+#include <linux/byteorder/little_endian.h>
 
 #if defined(__GNUC__) && (__GNUC__ >= 2) && defined(__OPTIMIZE__)
 #  define __arch_swab32 __arch_swab32
