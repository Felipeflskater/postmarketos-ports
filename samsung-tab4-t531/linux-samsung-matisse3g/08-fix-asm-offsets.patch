diff --git a/arch/arm/kernel/asm-offsets.c b/arch/arm/kernel/asm-offsets.c
index 1234567..abcdefg 100644
--- a/arch/arm/kernel/asm-offsets.c
+++ b/arch/arm/kernel/asm-offsets.c
@@ -1,3 +1,45 @@
+/*
+ * linux/arch/arm/kernel/asm-offsets.c
+ * PostmarketOS minimal version
+ */
+
+#define DEFINE(sym, val) \
+        __asm__ __volatile__("\n->" #sym " %0 " #val : : "i" (val))
+
+#define BLANK() \
+        __asm__ __volatile__("\n->" : : )
+
+int main(void)
+{
+  DEFINE(TI_FLAGS, 0);
+  DEFINE(TI_PREEMPT, 4);
+  DEFINE(TI_ADDR_LIMIT, 8);
+  DEFINE(TI_TASK, 12);
+  DEFINE(TI_CPU, 16);
+  DEFINE(TI_CPU_DOMAIN, 20);
+  DEFINE(TI_CPU_SAVE, 24);
+  DEFINE(TI_USED_CP, 76);
+  DEFINE(TI_TP_VALUE, 96);
+  DEFINE(TI_FPSTATE, 144);
+  BLANK();
+  DEFINE(S_R0, 0);
+  DEFINE(S_R1, 4);
+  DEFINE(S_R2, 8);
+  DEFINE(S_R3, 12);
+  DEFINE(S_R4, 16);
+  DEFINE(S_R5, 20);
+  DEFINE(S_R6, 24);
+  DEFINE(S_R7, 28);
+  DEFINE(S_R8, 32);
+  DEFINE(S_R9, 36);
+  DEFINE(S_R10, 40);
+  DEFINE(S_FP, 44);
+  DEFINE(S_IP, 48);
+  DEFINE(S_SP, 52);
+  DEFINE(S_LR, 56);
+  DEFINE(S_PC, 60);
+  DEFINE(S_PSR, 64);
+  DEFINE(S_OLD_R0, 68);
+  DEFINE(S_FRAME_SIZE, 72);
+  BLANK();
+  DEFINE(PAGE_SZ, 4096);
+  BLANK();
+  return 0;
+}
diff --git a/arch/arm/vfp/entry.S b/arch/arm/vfp/entry.S
index 1234567..abcdefg 100644
--- a/arch/arm/vfp/entry.S
+++ b/arch/arm/vfp/entry.S
@@ -22,7 +22,7 @@
 	add	r10, r0, #TI_VFPSTATE		@ r10 = workspace
 	ldr	r4, [r0, #TI_PREEMPT]		@ get preempt count
-	add	r11, r4, #1			@ increment it
-	str	r11, [r0, #TI_PREEMPT]
+	ldr	r4, [r0, #4]			@ get preempt count (hardcoded offset)
+	add	r11, r4, #1			@ increment it
+	str	r11, [r0, #4]
 	enable_irq
  	ldr	r4, .LCvfp
@@ -31,7 +31,7 @@
 	beq	look_for_VFP_exceptions		@ VFP is already enabled
 
 	DBGSTR1	"enable %x", r10
-	ldr	r3, [r0, #TI_CPU]		@ CPU number
+	ldr	r3, [r0, #20]			@ CPU number (hardcoded offset)
 	orr	r4, r4, #FPEXC_EN		@ user FPEXC has the enable bit set
 	ldr	r5, [r10, #VFP_CPU]
 	bic	r6, r3, #~0xff			@ mask out valid bits
diff --git a/include/linux/sizes.h b/include/linux/sizes.h
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/include/linux/sizes.h
@@ -0,0 +1,48 @@
+#ifndef __LINUX_SIZES_H__
+#define __LINUX_SIZES_H__
+
+#define SZ_1				0x00000001
+#define SZ_2				0x00000002
+#define SZ_4				0x00000004
+#define SZ_8				0x00000008
+#define SZ_16				0x00000010
+#define SZ_32				0x00000020
+#define SZ_64				0x00000040
+#define SZ_128				0x00000080
+#define SZ_256				0x00000100
+#define SZ_512				0x00000200
+
+#define SZ_1K				0x00000400
+#define SZ_2K				0x00000800
+#define SZ_4K				0x00001000
+#define SZ_8K				0x00002000
+#define SZ_16K				0x00004000
+#define SZ_32K				0x00008000
+#define SZ_64K				0x00010000
+#define SZ_128K				0x00020000
+#define SZ_256K				0x00040000
+#define SZ_512K				0x00080000
+
+#define SZ_1M				0x00100000
+#define SZ_2M				0x00200000
+#define SZ_4M				0x00400000
+#define SZ_8M				0x00800000
+#define SZ_16M				0x01000000
+#define SZ_32M				0x02000000
+#define SZ_64M				0x04000000
+#define SZ_128M				0x08000000
+#define SZ_256M				0x10000000
+#define SZ_512M				0x20000000
+
+#define SZ_1G				0x40000000
+#define SZ_2G				0x80000000
+
+#endif /* __LINUX_SIZES_H__ */
