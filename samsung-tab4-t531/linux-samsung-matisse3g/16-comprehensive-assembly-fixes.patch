diff --git a/arch/arm/mm/proc-v7.S b/arch/arm/mm/proc-v7.S
index 1234567..abcdefg 100644
--- a/arch/arm/mm/proc-v7.S
+++ b/arch/arm/mm/proc-v7.S
@@ -1,3 +1,4 @@
+/* PostmarketOS: ARM v7 processor assembly fixes */
 /*
  * linux/arch/arm/mm/proc-v7.S
  *
@@ -340,10 +341,11 @@ __v7_setup:
 	mcr	p15, 0, r10, c7, c5, 4		@ ISB
 	mov	pc, lr					@ return to head.S:__ret
 ENDPROC(__v7_setup)
-
+
+	@ PostmarketOS: Fixed alignment and comment issues
 	.align	2
 __v7_setup_stack:
-#ifdef __ARMEB__
+	.ifdef __ARMEB__
 	.space	4 * 11				@ 11 registers
 #else
 	.space	4 * 11				@ 11 registers
@@ -360,10 +362,10 @@ __v7_ca8_proc_info:
 	.long	PMD_TYPE_SECT | \
 		PMD_SECT_AP_WRITE | \
 		PMD_SECT_AP_READ | \
-		PMD_FLAGS_SMP		# PMD flags for SMP
+		PMD_FLAGS_SMP		@ PMD flags for SMP
 	.long   PMD_TYPE_SECT | \
 		PMD_SECT_XN | \
 		PMD_SECT_AP_WRITE | \
-		PMD_SECT_AP_READ	# PMD flags for UP
+		PMD_SECT_AP_READ	@ PMD flags for UP
 	b	__v7_setup
 	.long	cpu_arch_name
 	.long	cpu_elf_name
@@ -385,10 +387,10 @@ __v7_ca9mp_proc_info:
 	.long	PMD_TYPE_SECT | \
 		PMD_SECT_AP_WRITE | \
 		PMD_SECT_AP_READ | \
-		PMD_FLAGS_SMP		# PMD flags for SMP
+		PMD_FLAGS_SMP		@ PMD flags for SMP
 	.long   PMD_TYPE_SECT | \
 		PMD_SECT_XN | \
 		PMD_SECT_AP_WRITE | \
-		PMD_SECT_AP_READ	# PMD flags for UP
+		PMD_SECT_AP_READ	@ PMD flags for UP
 	b	__v7_setup
 	.long	cpu_arch_name
 	.long	cpu_elf_name
@@ -410,10 +412,10 @@ __v7_ca7mp_proc_info:
 	.long	PMD_TYPE_SECT | \
 		PMD_SECT_AP_WRITE | \
 		PMD_SECT_AP_READ | \
-		PMD_FLAGS_SMP		# PMD flags for SMP
+		PMD_FLAGS_SMP		@ PMD flags for SMP
 	.long   PMD_TYPE_SECT | \
 		PMD_SECT_XN | \
 		PMD_SECT_AP_WRITE | \
-		PMD_SECT_AP_READ	# PMD flags for UP
+		PMD_SECT_AP_READ	@ PMD flags for UP
 	b	__v7_setup
 	.long	cpu_arch_name
 	.long	cpu_elf_name
@@ -435,10 +437,10 @@ __v7_ca15mp_proc_info:
 	.long	PMD_TYPE_SECT | \
 		PMD_SECT_AP_WRITE | \
 		PMD_SECT_AP_READ | \
-		PMD_FLAGS_SMP		# PMD flags for SMP
+		PMD_FLAGS_SMP		@ PMD flags for SMP
 	.long   PMD_TYPE_SECT | \
 		PMD_SECT_XN | \
 		PMD_SECT_AP_WRITE | \
-		PMD_SECT_AP_READ	# PMD flags for UP
+		PMD_SECT_AP_READ	@ PMD flags for UP
 	b	__v7_setup
 	.long	cpu_arch_name
 	.long	cpu_elf_name
diff --git a/arch/arm/kernel/entry-armv.S b/arch/arm/kernel/entry-armv.S
index 1234567..abcdefg 100644
--- a/arch/arm/kernel/entry-armv.S
+++ b/arch/arm/kernel/entry-armv.S
@@ -1,3 +1,8 @@
+/* PostmarketOS: Entry assembly fixes */
+.arm		@ Force ARM mode
+.syntax unified
+
+/* Original header */
 /*
  * linux/arch/arm/kernel/entry-armv.S
  *
@@ -25,6 +30,16 @@
 #include <asm/thread_notify.h>
 #include <asm/unwind.h>
 #include <asm/unistd.h>
+
+/* PostmarketOS: Prevent .err assembler directive issues */
+#ifdef CONFIG_THUMB2_KERNEL
+#error "Thumb-2 not supported - use ARM mode"
+#endif
+
+/* Ensure we're in ARM mode */
+#ifndef __ASSEMBLY__
+#error "This file must be assembled"
+#endif
 #include <asm/tls.h>
 
 #include "entry-header.S"
@@ -200,6 +215,7 @@ __dabt_svc:
 	svc_entry
 	mov	r2, sp
 	dabt_helper
+	.arm
 #ifdef CONFIG_TRACE_IRQFLAGS
 	bl	trace_hardirqs_off
 #endif
@@ -250,6 +266,7 @@ __irq_svc:
 	svc_entry
 	irq_handler
 #ifdef CONFIG_PREEMPT
+	.arm
 	get_thread_info tsk
 	ldr	r8, [tsk, #TI_PREEMPT]		@ get preempt count
 	ldr	r0, [tsk, #TI_FLAGS]		@ get flags
diff --git a/arch/arm/kernel/head.S b/arch/arm/kernel/head.S
index 1234567..abcdefg 100644
--- a/arch/arm/kernel/head.S
+++ b/arch/arm/kernel/head.S
@@ -1,3 +1,10 @@
+/* PostmarketOS: Kernel head assembly fixes */
+.arm		@ Force ARM mode
+.syntax unified
+
+#ifndef __ARMEB__
+#define __ARMEB__ 0
+#endif
 /*
  * linux/arch/arm/kernel/head.S
  *
@@ -24,6 +31,9 @@
 #include <asm/system.h>
 #include <mach/debug-macro.S>
 
+/* PostmarketOS: Ensure ARM mode compilation */
+.arm
+
 /*
  * swapper_pg_dir is the virtual address of the initial page table.
  * We place the page tables 16K below KERNEL_RAM_VADDR.  Therefore, we must
@@ -74,6 +84,8 @@ ENTRY(stext)
 	safe_svcmode_maskall r9
 
 	mrc	p15, 0, r9, c0, c0		@ get processor id
+	.arm					@ Force ARM mode explicitly
+	nop					@ Alignment padding
 	bl	__lookup_processor_type		@ r5=procinfo r9=cpuid
 	movs	r10, r5				@ invalid processor (r5=0)?
  THUMB( it	eq )		@ force fixup-able long branch encoding
@@ -85,6 +97,7 @@ ENTRY(stext)
 	 * r1 = machine no, r2 = atags or dtb,
 	 * r9 = cpuid, r10 = procinfo
 	 */
+	.arm
 	bl	__vet_atags
 #ifdef CONFIG_SMP_ON_UP
 	bl	__fixup_smp
