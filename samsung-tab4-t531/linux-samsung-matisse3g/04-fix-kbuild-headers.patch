--- /dev/null
+++ b/include/linux/kbuild.h
@@ -0,0 +1,20 @@
+#ifndef __LINUX_KBUILD_H
+#define __LINUX_KBUILD_H
+
+/* Macros para geração de offsets e constantes */
+
+#define DEFINE(sym, val) \
+        __asm__ __volatile__("\n->" #sym " %0 " #val : : "i" (val))
+
+#define BLANK() \
+        __asm__ __volatile__("\n->" : : )
+
+#define OFFSET(sym, str, mem) \
+        DEFINE(sym, offsetof(struct str, mem))
+
+#define COMMENT(x) \
+        __asm__ __volatile__("\n->#" x)
+
+#define SIZE(sym, str) \
+        DEFINE(sym, sizeof(struct str))
+
+#endif /* __LINUX_KBUILD_H */
--- /dev/null
+++ b/include/linux/stddef.h
@@ -0,0 +1,25 @@
+#ifndef _LINUX_STDDEF_H
+#define _LINUX_STDDEF_H
+
+#include <uapi/linux/stddef.h>
+
+#ifndef __ASSEMBLY__
+#undef false
+#undef true
+enum { false = 0, true = 1 };
+
+#undef offsetof
+#ifdef __compiler_offsetof
+#define offsetof(TYPE, MEMBER) __compiler_offsetof(TYPE, MEMBER)
+#else
+#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)
+#endif
+
+/* Definições de tipos básicos */
+#ifndef NULL
+#define NULL ((void *)0)
+#endif
+
+#endif /* __ASSEMBLY__ */
+
+#endif /* _LINUX_STDDEF_H */
--- /dev/null
+++ b/include/uapi/linux/stddef.h
@@ -0,0 +1,15 @@
+#ifndef _UAPI_LINUX_STDDEF_H
+#define _UAPI_LINUX_STDDEF_H
+
+#ifndef __ASSEMBLY__
+#ifndef NULL
+#ifdef __cplusplus
+#define NULL 0
+#else
+#define NULL ((void *)0)
+#endif
+#endif
+#endif /* __ASSEMBLY__ */
+
+#endif /* _UAPI_LINUX_STDDEF_H */
